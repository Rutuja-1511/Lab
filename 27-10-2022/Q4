// Write a program to accept User ID and password checks if the password is valid or not based on password policies mention below:(Using exception Handling)
Password should not contain any space.
Password should contain at least one digit(0-9).
Password length should be between 8 to 15 characters. 
Password should contain at least one lowercase letter(a-z).
Password should contain at least one uppercase letter(A-Z). 
Password should contain at least one special character ( @, #, %, &, !, $, etc….).//


package Thursdaylab;

import java.util.Scanner;

public class Password
{
    public static void main(String[] args) throws PassException		//throws PassException
    {
	Scanner sc = new Scanner(System.in);
        String password1;
        int User_id;
        System.out.println("Enter User Id:");
        User_id=sc.nextInt();
        
        System.out.print("Enter Passward\n"+
                "1. Password length should be between 8 to 15 characters.\n" +
                "2. Password should not contain any space.\n" +
                "3. Password should contain at least one digit(0-9). \n" +
                "4. Password should contain at least one uppercase letter(A-Z). \n" +
                "5. Password should contain at least one lowercase letter(a-z). \n" +
                "6. Password should contain at least one special character ( @, #, %, &, !, $ ). \n" +
                "(You hava to follow above Conditions.): ");
        password1=sc.next();
        
        try {
            
            Valid(password1);
            System.out.println("Valid Password");
        }
        catch (PassException e) 
        {
            System.out.print(e.getMessage());
            System.out.println(e.DisplayMsg());
        }

    }

	public static void Valid(String password) throws PassException
	{
		          // to check space
        if (password.contains(" "))
        {
            throw new PasswordExp(1);
        }
        if (true) 
        {
            int count = 0;
            
            // check digits from 0 to 9
            
            for (int i = 0; i <= 9; i++) 
            {
  
                // to convert int to string
                String str1 = Integer.toString(i);
  
                if (password.contains(str1))
                {
                    count = 1;
                }
            }
            if (count == 0) 
            {
                throw new PasswordExp(2);
            }
        }
        // for checking if password length is between 8 and 15
        
        if (!((password.length() >= 8 && (password.length() <= 15)))) 
        {
            throw new PasswordExp(3);
        }
  
                    // checking small letters
            for (int i = 95; i <= 122; i++) 	//ASCII value of small letters start from 95 and end 122
            {
  
                // type casting
                char c = (char)i;
                String str1 = Character.toString(c);
  
                if (password.contains(str1))
                {
                    count = 1;
                }
            }
            if (count == 0) 
            {
                throw new PasswordExp(4);
            }
  
  
  // checking capital letters
            for (int i = 65; i <= 90; i++) 	//ASCII value of capital letters start from 65 and end 90
            {
  
                // type casting
                char c = (char)i;
  
                String str1 = Character.toString(c);
                if (password.contains(str1)) 
                {
                    count = 1;
                }
            }
            if (count == 0) 
            {
                throw new PasswordExp(5);
            }
        }
  
        if (true) 
        {
            int count = 0;
      
  
        // for special characters
        if (!(password.contains("@") || password.contains("#") 
              || password.contains("!") || password.contains("~")
              || password.contains("$") || password.contains("%")
              || password.contains("^") || password.contains("&")
              || password.contains("*") || password.contains("(")
              || password.contains(")") || password.contains("-")
              || password.contains("+") || password.contains("/")
              || password.contains(":") || password.contains(".")
              || password.contains(", ") || password.contains("<")
              || password.contains(">") || password.contains("?")
              || password.contains("|"))) 
        {
            throw new PasswordExp(5);
        }
  
        if (true)
        {
            int count = 0;
  

        }
    }
  
}



package thursday;

public class PasswordExp extends Exception		//extends built-in Exception class
{
	int passwordCondition = 0;
	 
	public PasswordExp(int i)
	{
		super("Invalid Password: ");
        passwordCondition = i;
	}

    
    public String DisplayMsg()
    {
        switch (passwordCondition) 	//switch case for conditions 
        {
        
        	case 1:
            return ("Password should not contain any space");
  
        	case 2:
            return ("Password should contain at least one digit(0-9)");
  
        	case 3:
            return ("Password length should be between 8 to 15 characters");
  
        	case 4:
            return ("Password should contain at least one lowercase letter(a-z)");
  
        	case 5:
            return ("Password should contain at least one uppercase letter(A-Z)");
  
        	case 6:
            return ("Password should contain at least one special character ( @, #, %, &, !, $, etc….)");
        }
  
        return ("");
    }
}
